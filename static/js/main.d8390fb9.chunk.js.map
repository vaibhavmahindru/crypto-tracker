{"version":3,"sources":["Coins.js","App.js","index.js"],"names":["Coins","key","symbol","name","currPrice","cp1h","cp24h","cp7d","image","sparkLine","TableRow","TableCell","component","scope","Avatar","alt","src","align","className","toFixed","useStyles","makeStyles","table","minWidth","App","classes","useState","coins","setCoins","useEffect","axios","get","then","res","data","catch","err","console","log","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","coin","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","volme","market_cap","sparkline_in_7d","price","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAqCeA,EA/BD,SAAC,GASK,IARhBC,EAQe,EARfA,IACAC,EAOe,EAPfA,OACAC,EAMe,EANfA,KACAC,EAKe,EALfA,UACAC,EAIe,EAJfA,KACAC,EAGe,EAHfA,MACAC,EAEe,EAFfA,KACAC,EACe,EADfA,MACe,EAAfC,UACA,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,MAAhC,SACI,cAACC,EAAA,EAAD,CAAQC,IAAI,OAAOC,IAAKR,MAE5B,cAACG,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,4BAAId,MAC7B,cAACQ,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,4BAAIf,MAC7B,cAACS,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,uCAAKb,OAC9B,cAACO,EAAA,EAAD,CAAWM,MAAM,QAAjB,SACKZ,EAAO,EAAK,oBAAGa,UAAU,mBAAb,UAAiCb,EAAKc,QAAQ,GAA9C,OAA2D,oBAAGD,UAAU,qBAAb,UAAmCb,EAAKc,QAAQ,GAAhD,SAE5E,cAACR,EAAA,EAAD,CAAWM,MAAM,QAAjB,SACKX,EAAQ,EAAK,oBAAGY,UAAU,mBAAb,UAAiCZ,EAAMa,QAAQ,GAA/C,OAA4D,oBAAGD,UAAU,qBAAb,UAAmCZ,EAAMa,QAAQ,GAAjD,SAE9E,cAACR,EAAA,EAAD,CAAWM,MAAM,QAAjB,SACKV,EAAO,EAAK,oBAAGW,UAAU,mBAAb,UAAiCX,EAAKY,QAAQ,GAA9C,OAA2D,oBAAGD,UAAU,qBAAb,UAAmCX,EAAKY,QAAQ,GAAhD,WAdjElB,I,gDCJjBmB,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAS,OAyDEC,MApDf,WACE,IAAMC,EAAUL,IADH,EAEYM,mBAAS,IAFrB,mBAENC,EAFM,KAEAC,EAFA,KAUb,OAPAC,qBAAU,WACRC,IAAMC,IAAI,gKACTC,MAAK,SAAAC,GACJL,EAASK,EAAIC,SAEdC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC1B,IAEA,qBAAKlB,UAAU,MAAf,SAEE,cAACqB,EAAA,EAAD,CAAgB3B,UAAW4B,IAA3B,SACA,eAACC,EAAA,EAAD,CAAOvB,UAAWO,EAAQH,MAAOoB,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACjC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAW,uCACX,cAACA,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,uCACzB,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,yCACzB,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,6CACzB,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,qCACzB,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,sCACzB,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,SAAyB,0CAG7B,cAAC2B,EAAA,EAAD,UAEAjB,EAAMkB,KAAI,SAAAC,GACR,OACA,cAAC,EAAD,CAEE5C,OAAQ4C,EAAK5C,OACbC,KAAM2C,EAAK3C,KACXC,UAAW0C,EAAKC,cAChB1C,KAAMyC,EAAKE,uCACX1C,MAAOwC,EAAKG,wCACZ1C,KAAMuC,EAAKI,uCACX1C,MAAOsC,EAAKtC,MACZ2C,MAAOL,EAAKM,WACZ3C,UAAWqC,EAAKO,gBAAgBC,OAT3BR,EAAKS,iBC/CtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d8390fb9.chunk.js","sourcesContent":["import React from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './coins.css'\r\nconst Coins = ({\r\n    key,\r\n    symbol,\r\n    name,\r\n    currPrice,\r\n    cp1h,\r\n    cp24h,\r\n    cp7d,\r\n    image,\r\n    sparkLine}) => {\r\n    return(\r\n        <TableRow key={key}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                <Avatar alt=\"logo\" src={image} />\r\n            </TableCell>\r\n            <TableCell align=\"right\"><p>{name}</p></TableCell>\r\n            <TableCell align=\"right\"><p>{symbol}</p></TableCell>\r\n            <TableCell align=\"right\"><p>â‚¹{currPrice}</p></TableCell>\r\n            <TableCell align=\"right\">\r\n                {cp1h < 0 ? (<p className='coin-percent red'>{cp1h.toFixed(2)}%</p>) : (<p className='coin-percent green'>{cp1h.toFixed(2)}%</p>)}\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                {cp24h < 0 ? (<p className='coin-percent red'>{cp24h.toFixed(2)}%</p>) : (<p className='coin-percent green'>{cp24h.toFixed(2)}%</p>)}\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                {cp7d < 0 ? (<p className='coin-percent red'>{cp7d.toFixed(2)}%</p>) : (<p className='coin-percent green'>{cp7d.toFixed(2)}%</p>)}\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default Coins\r\n\r\n\r\n    // const options = {chart: {id: 'sparkline chart'},stroke: { curve: 'straight' }, yaxis: {labels: {show: false} }, xaxis:  {labels: {show: false} }}\r\n    //     const series = [{name: 'series',data: sparkLine}]","import './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Coins from './Coins';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth:450,\n  },\n});\n\n\nfunction App() {\n  const classes = useStyles();\n  const [coins,setCoins] = useState([]);\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=20&page=1&sparkline=true&price_change_percentage=1h%2C24h%2C7d')\n    .then(res=>{\n      setCoins(res.data)\n    })\n    .catch(err => console.log(err))\n  },[])\n  return (\n    <div className=\"App\">\n      \n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell><p>LOGO</p></TableCell>\n            <TableCell align=\"right\"><p>NAME</p></TableCell>\n            <TableCell align=\"right\"><p>SYMBOL</p></TableCell>\n            <TableCell align=\"right\"><p>CURR PRICE</p></TableCell>\n            <TableCell align=\"right\"><p>1H</p></TableCell>\n            <TableCell align=\"right\"><p>24H</p></TableCell>\n            <TableCell align=\"right\"><p>7d</p></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {\n        coins.map(coin => {\n          return (\n          <Coins\n            key={coin.id}\n            symbol={coin.symbol}\n            name={coin.name}\n            currPrice={coin.current_price}\n            cp1h={coin.price_change_percentage_1h_in_currency}\n            cp24h={coin.price_change_percentage_24h_in_currency}\n            cp7d={coin.price_change_percentage_7d_in_currency}\n            image={coin.image}\n            volme={coin.market_cap}\n            sparkLine={coin.sparkline_in_7d.price}\n          />\n          )\n        })\n      }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}